import{_ as s,c as i,o as a,a3 as n}from"./chunks/framework.B_66xkI7.js";const l="/deploy-docs/public/img.BIZaYMgJ.png",y=JSON.parse('{"title":"容器日志占用磁盘空间过大问题","description":"","frontmatter":{},"headers":[],"relativePath":"docker/FAQ/logs-too-large.md","filePath":"docker/FAQ/logs-too-large.md"}'),h={name:"docker/FAQ/logs-too-large.md"},p=n(`<h1 id="容器日志占用磁盘空间过大问题" tabindex="-1">容器日志占用磁盘空间过大问题 <a class="header-anchor" href="#容器日志占用磁盘空间过大问题" aria-label="Permalink to &quot;容器日志占用磁盘空间过大问题&quot;">​</a></h1><nav class="table-of-contents"><ul><li><a href="#容器日志占用磁盘空间过大问题">容器日志占用磁盘空间过大问题</a><ul><li><a href="#控制容器日志大小">控制容器日志大小</a><ul><li><a href="#方法一">方法一</a><ul><li><a href="#docker">docker</a></li><li><a href="#docker-compose">docker-compose</a></li></ul></li><li><a href="#方法二-全局配置">方法二：全局配置</a></li></ul></li><li><a href="#脚本">脚本</a><ul><li><a href="#清理日志脚本">清理日志脚本</a></li><li><a href="#查看docker容器日志大小">查看docker容器日志大小</a></li></ul></li></ul></li></ul></nav><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 查询占用磁盘较大的文件-升序</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">du</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -d1</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -h</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /var/lib/docker/containers</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> |</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> sort</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -h</span></span></code></pre></div><h2 id="控制容器日志大小" tabindex="-1">控制容器日志大小 <a class="header-anchor" href="#控制容器日志大小" aria-label="Permalink to &quot;控制容器日志大小&quot;">​</a></h2><h3 id="方法一" tabindex="-1">方法一 <a class="header-anchor" href="#方法一" aria-label="Permalink to &quot;方法一&quot;">​</a></h3><h4 id="docker" tabindex="-1">docker <a class="header-anchor" href="#docker" aria-label="Permalink to &quot;docker&quot;">​</a></h4><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># max-size：容器日志最大100M</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># max-file：最大日志数3个（ ex: *-json.log, *-json.log.1, *-json.log.2 ）</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">docker</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> run</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -it</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --log-opt</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> max-size=100m</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --log-opt</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> max-file=</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">3</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> redis</span></span></code></pre></div><p>日志目录/var/lib/docker/containers <img src="`+l+`" alt="img.png"></p><p>观察日志的增长，你会发现当<code>xxx.log</code>日志文件到达设置的最大日志量后，会变成<code>xxx.log.1</code>，<code>xxx.log.2</code>文件...</p><h4 id="docker-compose" tabindex="-1">docker-compose <a class="header-anchor" href="#docker-compose" aria-label="Permalink to &quot;docker-compose&quot;">​</a></h4><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">version</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B5695999;--shiki-dark:#C98A7D99;"> &#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">3</span><span style="--shiki-light:#B5695999;--shiki-dark:#C98A7D99;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">services</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  test</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">    image</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> xxx</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    # 日志</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">    logging</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">      driver</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B5695999;--shiki-dark:#C98A7D99;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">json-file</span><span style="--shiki-light:#B5695999;--shiki-dark:#C98A7D99;">&quot;</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">   # 默认的文件日志驱动</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">      options</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">        max-size</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B5695999;--shiki-dark:#C98A7D99;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">100m</span><span style="--shiki-light:#B5695999;--shiki-dark:#C98A7D99;">&quot;</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    # 单个日志文件大小为100m</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">        max-file</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B5695999;--shiki-dark:#C98A7D99;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">3</span><span style="--shiki-light:#B5695999;--shiki-dark:#C98A7D99;">&quot;</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">       # 最多3个日志文件</span></span></code></pre></div><h3 id="方法二-全局配置" tabindex="-1">方法二：全局配置 <a class="header-anchor" href="#方法二-全局配置" aria-label="Permalink to &quot;方法二：全局配置&quot;">​</a></h3><blockquote><p>温馨提示：新容器生效</p></blockquote><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 创建或修改\`daemon.json\`文件</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">cat</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /etc/docker/daemon.json</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 新增如下配置</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">{</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">    &quot;log-driver&quot;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">:</span><span style="--shiki-light:#B5695999;--shiki-dark:#C98A7D99;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">json-file</span><span style="--shiki-light:#B5695999;--shiki-dark:#C98A7D99;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">,</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">    &quot;log-opts&quot;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> {</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">        &quot;max-size&quot;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">:</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">&quot;100m&quot;</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">,</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">  # 单个日志文件最大100m</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">        &quot;max-file&quot;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">:</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">&quot;3&quot;</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> # 最多3个日志文件</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    }</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 重启docker</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">systemctl</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> daemon-reload</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">systemctl</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> restart</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> docker</span></span></code></pre></div><h2 id="脚本" tabindex="-1">脚本 <a class="header-anchor" href="#脚本" aria-label="Permalink to &quot;脚本&quot;">​</a></h2><h3 id="清理日志脚本" tabindex="-1">清理日志脚本 <a class="header-anchor" href="#清理日志脚本" aria-label="Permalink to &quot;清理日志脚本&quot;">​</a></h3><blockquote><p>docker-log-clean.sh</p></blockquote><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">#!/bin/bash</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">####################################</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># @description 清理docker容器日志</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># @params $? =&gt; 代表上一个命令执行后的退出状态: 0-&gt;成功,1-&gt;失败</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># @example =&gt; sh docker_log_clean.sh</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">####################################</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 在执行过程中若遇到使用了未定义的变量或命令返回值为非零，将直接报错退出</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">set</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -eu</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">echo</span><span style="--shiki-light:#B5695999;--shiki-dark:#C98A7D99;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">================== ↓↓↓↓↓↓ 清理docker容器日志 ↓↓↓↓↓↓ ==================</span><span style="--shiki-light:#B5695999;--shiki-dark:#C98A7D99;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">logs</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=$(</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">find</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /var/lib/docker/containers/</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -name</span><span style="--shiki-light:#B5695999;--shiki-dark:#C98A7D99;"> &#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">*-json.log*</span><span style="--shiki-light:#B5695999;--shiki-dark:#C98A7D99;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">for</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> log</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> in</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> $logs</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">do</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">    echo</span><span style="--shiki-light:#B5695999;--shiki-dark:#C98A7D99;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">clean log: $log</span><span style="--shiki-light:#B5695999;--shiki-dark:#C98A7D99;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">    cat</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /dev/null</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> &gt;</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> $log</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">done</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">echo</span><span style="--shiki-light:#B5695999;--shiki-dark:#C98A7D99;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">====================================================================</span><span style="--shiki-light:#B5695999;--shiki-dark:#C98A7D99;">&quot;</span></span></code></pre></div><h3 id="查看docker容器日志大小" tabindex="-1">查看docker容器日志大小 <a class="header-anchor" href="#查看docker容器日志大小" aria-label="Permalink to &quot;查看docker容器日志大小&quot;">​</a></h3><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">#!/bin/bash</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">####################################</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># @description 查看docker容器日志大小</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># @params $? =&gt; 代表上一个命令执行后的退出状态: 0-&gt;成功,1-&gt;失败</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># @example =&gt; sh docker_log_size_show.sh</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">####################################</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 在执行过程中若遇到使用了未定义的变量或命令返回值为非零，将直接报错退出</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">set</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -eu</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">echo</span><span style="--shiki-light:#B5695999;--shiki-dark:#C98A7D99;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">================== ↓↓↓↓↓↓ 查询docker容器日志大小 ↓↓↓↓↓↓ ================</span><span style="--shiki-light:#B5695999;--shiki-dark:#C98A7D99;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">logs</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=$(</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">find</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /var/lib/docker/containers/</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -name</span><span style="--shiki-light:#B5695999;--shiki-dark:#C98A7D99;"> &#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">*-json.log*</span><span style="--shiki-light:#B5695999;--shiki-dark:#C98A7D99;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">for</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> log</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> in</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> $logs</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">do</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">    ls</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -lh</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> $log</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">done</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">echo</span><span style="--shiki-light:#B5695999;--shiki-dark:#C98A7D99;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">====================================================================</span><span style="--shiki-light:#B5695999;--shiki-dark:#C98A7D99;">&quot;</span></span></code></pre></div>`,20),e=[p];function k(t,r,d,o,c,g){return a(),i("div",null,e)}const D=s(h,[["render",k]]);export{y as __pageData,D as default};
